{"version":3,"sources":["shared/components/UIElements/Avatar.js","shared/components/UIElements/Card.js","user/components/UserItem.js","user/components/UsersList.js","shared/components/UIElements/Backdrop.js","shared/components/UIElements/Modal.js","shared/components/FormElements/Button.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/LoadingSpinner.js","shared/hooks/http-hook.js","user/pages/Users.js","shared/util/validators.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","shared/context/auth-context.js","places/pages/NewPlace.js","shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js","places/pages/UpdatePlace.js","user/pages/Auth.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["Avatar","props","React","createElement","className","style","src","image","alt","width","height","Card","children","UserItem","Link","to","id","name","placeCount","UsersList","items","length","map","user","key","places","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","ModalOverlay","content","headerClass","header","onSubmit","event","preventDefault","contentClass","footerClass","footer","Modal","Fragment","show","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","Button","href","size","inverse","danger","exact","type","disabled","ErrorModal","onClear","error","LoadingSpinner","asOverlay","useHttpClient","isLoading","setIsLoading","useState","setError","activeHttpRequests","useRef","sendRequest","useCallback","async","url","method","arguments","undefined","body","headers","httpAbortCtrl","AbortController","current","push","response","fetch","signal","responseData","json","filter","reqCtrl","ok","Error","message","err","useEffect","forEach","abortCtrl","abort","clearError","Users","loadedUsers","setLoadedUsers","users","fetchUsers","VALIDATOR_MINLENGTH","val","validate","value","validators","isValid","validator","trim","test","inputReducer","state","action","isTouched","Input","inputState","dispatch","useReducer","initialValue","initialValid","onInput","changeHandler","target","touchHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","inputData","formValidity","AuthContext","createContext","isLoggedIn","userId","login","logout","NewPlace","auth","useContext","inputHandler","title","description","address","history","useHistory","JSON","stringify","creator","Map","mapRef","center","zoom","window","google","maps","Marker","position","ref","PlaceItem","showMap","setShowMap","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","coordinates","onDelete","openMapHandler","creatorId","showDeleteWarningHandler","PlaceList","place","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","fetchPlaces","deletedPlaceId","prevPlaces","UpdatePlace","loadedPlace","setLoadedPlace","placeId","setFormData","fetchPlace","Auth","isLoginMode","setIsLoginMode","email","password","switchModeHandler","prevMode","MainHeader","NavLinks","NavLink","SideDrawer","MainNavigation","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","openDrawerHandler","App","setIsLoggedIn","setUserId","uid","routes","Switch","Route","path","Redirect","Provider","Router","render"],"mappings":"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","file":"static/js/main.5a564382.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Avatar from '../../shared/components/UIElements/Avatar';\nimport Card from '../../shared/components/UIElements/Card';\nimport './UserItem.css';\n\nconst UserItem = props => {\n  return (\n    <li className=\"user-item\">\n      <Card className=\"user-item__content\">\n        <Link to={`/${props.id}/places`}>\n          <div className=\"user-item__image\">\n            <Avatar image={props.image} alt={props.name} />\n          </div>\n          <div className=\"user-item__info\">\n            <h2>{props.name}</h2>\n            <h3>\n              {props.placeCount} {props.placeCount === 1 ? 'Place' : 'Places'}\n            </h3>\n          </div>\n        </Link>\n      </Card>\n    </li>\n  );\n};\n\nexport default UserItem;\n","import React from 'react';\n\nimport UserItem from './UserItem';\nimport Card from '../../shared/components/UIElements/Card';\nimport './UsersList.css';\n\nconst UsersList = props => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>No users found.</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <ul className=\"users-list\">\n      {props.items.map(user => (\n        <UserItem\n          key={user.id}\n          id={user.id}\n          image={user.image}\n          name={user.name}\n          placeCount={user.places.length}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default UsersList;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import { useState, useCallback, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = 'GET', body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal\n        });\n\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          reqCtrl => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","import React, { useEffect, useState } from 'react';\n\nimport UsersList from '../components/UsersList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nconst Users = () => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedUsers, setLoadedUsers] = useState();\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const responseData = await sendRequest(\n          'http://localhost:5000/api/users'\n        );\n\n        setLoadedUsers(responseData.users);\n      } catch (err) {}\n    };\n    fetchUsers();\n  }, [sendRequest]);\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\n    </React.Fragment>\n  );\n};\n\nexport default Users;\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    case 'TOUCH': {\n      return {\n        ...state,\n        isTouched: true\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid)\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${!inputState.isValid && inputState.isTouched &&\n        'form-control--invalid'}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};","import { createContext } from 'react';\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  userId: null,\n  login: () => {},\n  logout: () => {}\n});\n","import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './PlaceForm.css';\n\nconst NewPlace = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [formState, inputHandler] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      },\n      address: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n  );\n\n  const history = useHistory();\n\n  const placeSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        'http://localhost:5000/api/places',\n        'POST',\n        JSON.stringify({\n          title: formState.inputs.title.value,\n          description: formState.inputs.description.value,\n          address: formState.inputs.address.value,\n          creator: auth.userId\n        }),\n        { 'Content-Type': 'application/json' }\n      );\n      history.push('/');\n    } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n        {isLoading && <LoadingSpinner asOverlay />}\n        <Input\n          id=\"title\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Title\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid title.\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"description\"\n          element=\"textarea\"\n          label=\"Description\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please enter a valid description (at least 5 characters).\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"address\"\n          element=\"input\"\n          label=\"Address\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid address.\"\n          onInput={inputHandler}\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          ADD PLACE\n        </Button>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default NewPlace;\n","import React, { useRef, useEffect } from 'react';\n\nimport './Map.css';\n\nconst Map = props => {\n  const mapRef = useRef();\n  \n  const { center, zoom } = props;\n\n  useEffect(() => {\n    const map = new window.google.maps.Map(mapRef.current, {\n      center: center,\n      zoom: zoom\n    });\n  \n    new window.google.maps.Marker({ position: center, map: map });\n  }, [center, zoom]);  \n\n  return (\n    <div\n      ref={mapRef}\n      className={`map ${props.className}`}\n      style={props.style}\n    ></div>\n  );\n};\n\nexport default Map;\n","import React, { useState, useContext } from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Button from '../../shared/components/FormElements/Button';\nimport Modal from '../../shared/components/UIElements/Modal';\nimport Map from '../../shared/components/UIElements/Map';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport './PlaceItem.css';\n\nconst PlaceItem = props => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const auth = useContext(AuthContext);\n  const [showMap, setShowMap] = useState(false);\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n  const openMapHandler = () => setShowMap(true);\n\n  const closeMapHandler = () => setShowMap(false);\n\n  const showDeleteWarningHandler = () => {\n    setShowConfirmModal(true);\n  };\n\n  const cancelDeleteHandler = () => {\n    setShowConfirmModal(false);\n  };\n\n  const confirmDeleteHandler = async () => {\n    setShowConfirmModal(false);\n    try {\n      await sendRequest(\n        `http://localhost:5000/api/places/${props.id}`,\n        'DELETE'\n      );\n      props.onDelete(props.id);\n    } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Modal\n        show={showMap}\n        onCancel={closeMapHandler}\n        header={props.address}\n        contentClass=\"place-item__modal-content\"\n        footerClass=\"place-item__modal-actions\"\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\n      >\n        <div className=\"map-container\">\n          <Map center={props.coordinates} zoom={16} />\n        </div>\n      </Modal>\n      <Modal\n        show={showConfirmModal}\n        onCancel={cancelDeleteHandler}\n        header=\"Are you sure?\"\n        footerClass=\"place-item__modal-actions\"\n        footer={\n          <React.Fragment>\n            <Button inverse onClick={cancelDeleteHandler}>\n              CANCEL\n            </Button>\n            <Button danger onClick={confirmDeleteHandler}>\n              DELETE\n            </Button>\n          </React.Fragment>\n        }\n      >\n        <p>\n          Do you want to proceed and delete this place? Please note that it\n          can't be undone thereafter.\n        </p>\n      </Modal>\n      <li className=\"place-item\">\n        <Card className=\"place-item__content\">\n          {isLoading && <LoadingSpinner asOverlay />}\n          <div className=\"place-item__image\">\n            <img src={props.image} alt={props.title} />\n          </div>\n          <div className=\"place-item__info\">\n            <h2>{props.title}</h2>\n            <h3>{props.address}</h3>\n            <p>{props.description}</p>\n          </div>\n          <div className=\"place-item__actions\">\n            <Button inverse onClick={openMapHandler}>\n              VIEW ON MAP\n            </Button>\n            {auth.userId === props.creatorId && (\n              <Button to={`/places/${props.id}`}>EDIT</Button>\n            )}\n\n            {auth.userId === props.creatorId && (\n              <Button danger onClick={showDeleteWarningHandler}>\n                DELETE\n              </Button>\n            )}\n          </div>\n        </Card>\n      </li>\n    </React.Fragment>\n  );\n};\n\nexport default PlaceItem;\n","import React from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport PlaceItem from './PlaceItem';\nimport Button from '../../shared/components/FormElements/Button';\nimport './PlaceList.css';\n\nconst PlaceList = props => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"place-list center\">\n        <Card>\n          <h2>No places found. Maybe create one?</h2>\n          <Button to=\"/places/new\">Share Place</Button>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <ul className=\"place-list\">\n      {props.items.map(place => (\n        <PlaceItem\n          key={place.id}\n          id={place.id}\n          image={place.image}\n          title={place.title}\n          description={place.description}\n          address={place.address}\n          creatorId={place.creator}\n          coordinates={place.location}\n          onDelete={props.onDeletePlace}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default PlaceList;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport PlaceList from '../components/PlaceList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nconst UserPlaces = () => {\n  const [loadedPlaces, setLoadedPlaces] = useState();\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const userId = useParams().userId;\n\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      try {\n        const responseData = await sendRequest(\n          `http://localhost:5000/api/places/user/${userId}`\n        );\n        setLoadedPlaces(responseData.places);\n      } catch (err) {}\n    };\n    fetchPlaces();\n  }, [sendRequest, userId]);\n\n  const placeDeletedHandler = deletedPlaceId => {\n    setLoadedPlaces(prevPlaces =>\n      prevPlaces.filter(place => place.id !== deletedPlaceId)\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && loadedPlaces && (\n        <PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler} />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default UserPlaces;\n","import React, { useEffect, useState, useContext } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './PlaceForm.css';\n\nconst UpdatePlace = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedPlace, setLoadedPlace] = useState();\n  const placeId = useParams().placeId;\n  const history = useHistory();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n  );\n\n  useEffect(() => {\n    const fetchPlace = async () => {\n      try {\n        const responseData = await sendRequest(\n          `http://localhost:5000/api/places/${placeId}`\n        );\n        setLoadedPlace(responseData.place);\n        setFormData(\n          {\n            title: {\n              value: responseData.place.title,\n              isValid: true\n            },\n            description: {\n              value: responseData.place.description,\n              isValid: true\n            }\n          },\n          true\n        );\n\n      } catch (err) {}\n    };\n    fetchPlace();\n  }, [sendRequest, placeId, setFormData]);\n\n  const placeUpdateSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        `http://localhost:5000/api/places/${placeId}`,\n        'PATCH',\n        JSON.stringify({\n          title: formState.inputs.title.value,\n          description: formState.inputs.description.value\n        }),\n        {\n          'Content-Type': 'application/json'\n        }\n      );\n      history.push('/' + auth.userId + '/places');\n    } catch (err) {}\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"center\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (!loadedPlace && !error) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>Could not find place!</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {!isLoading && loadedPlace && (\n        <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\n          <Input\n            id=\"title\"\n            element=\"input\"\n            type=\"text\"\n            label=\"Title\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid title.\"\n            onInput={inputHandler}\n            initialValue={loadedPlace.title}\n            initialValid={true}\n          />\n          <Input\n            id=\"description\"\n            element=\"textarea\"\n            label=\"Description\"\n            validators={[VALIDATOR_MINLENGTH(5)]}\n            errorText=\"Please enter a valid description (min. 5 characters).\"\n            onInput={inputHandler}\n            initialValue={loadedPlace.description}\n            initialValid={true}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            UPDATE PLACE\n          </Button>\n        </form>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default UpdatePlace;\n","import React, { useState, useContext } from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './Auth.css';\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      email: {\n        value: '',\n        isValid: false\n      },\n      password: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n  );\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: undefined\n        },\n        formState.inputs.email.isValid && formState.inputs.password.isValid\n      );\n    } else {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: {\n            value: '',\n            isValid: false\n          }\n        },\n        false\n      );\n    }\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmitHandler = async event => {\n    event.preventDefault();\n\n    if (isLoginMode) {\n      try {\n        const responseData = await sendRequest(\n          'http://localhost:5000/api/users/login',\n          'POST',\n          JSON.stringify({\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n          }),\n          {\n            'Content-Type': 'application/json'\n          }\n        );\n        auth.login(responseData.user.id);\n      } catch (err) {}\n    } else {\n      try {\n        const responseData = await sendRequest(\n          'http://localhost:5000/api/users/signup',\n          'POST',\n          JSON.stringify({\n            name: formState.inputs.name.value,\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n          }),\n          {\n            'Content-Type': 'application/json'\n          }\n        );\n\n        auth.login(responseData.user.id);\n      } catch (err) {}\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Card className=\"authentication\">\n        {isLoading && <LoadingSpinner asOverlay />}\n        <h2>Login Required</h2>\n        <hr />\n        <form onSubmit={authSubmitHandler}>\n          {!isLoginMode && (\n            <Input\n              element=\"input\"\n              id=\"name\"\n              type=\"text\"\n              label=\"Your Name\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a name.\"\n              onInput={inputHandler}\n            />\n          )}\n          <Input\n            element=\"input\"\n            id=\"email\"\n            type=\"email\"\n            label=\"E-Mail\"\n            validators={[VALIDATOR_EMAIL()]}\n            errorText=\"Please enter a valid email address.\"\n            onInput={inputHandler}\n          />\n          <Input\n            element=\"input\"\n            id=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            validators={[VALIDATOR_MINLENGTH(6)]}\n            errorText=\"Please enter a valid password, at least 6 characters.\"\n            onInput={inputHandler}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            {isLoginMode ? 'LOGIN' : 'SIGNUP'}\n          </Button>\n        </form>\n        <Button inverse onClick={switchModeHandler}>\n          SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\n        </Button>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default Auth;\n","import React from 'react';\n\nimport './MainHeader.css';\n\nconst MainHeader = props => {\n  return <header className=\"main-header\">{props.children}</header>;\n};\n\nexport default MainHeader;\n","import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { AuthContext } from '../../context/auth-context';\nimport './NavLinks.css';\n\nconst NavLinks = props => {\n  const auth = useContext(AuthContext);\n\n  return (\n    <ul className=\"nav-links\">\n      <li>\n        <NavLink to=\"/\" exact>\n          ALL USERS\n        </NavLink>\n      </li>\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/places/new\">ADD PLACE</NavLink>\n        </li>\n      )}\n      {!auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <button onClick={auth.logout}>LOGOUT</button>\n        </li>\n      )}\n    </ul>\n  );\n};\n\nexport default NavLinks;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './SideDrawer.css';\n\nconst SideDrawer = props => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\n    </CSSTransition>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\n};\n\nexport default SideDrawer;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport MainHeader from './MainHeader';\nimport NavLinks from './NavLinks';\nimport SideDrawer from './SideDrawer';\nimport Backdrop from '../UIElements/Backdrop';\nimport './MainNavigation.css';\n\nconst MainNavigation = props => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawerHandler = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawerHandler = () => {\n    setDrawerIsOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n        <nav className=\"main-navigation__drawer-nav\">\n          <NavLinks />\n        </nav>\n      </SideDrawer>\n\n      <MainHeader>\n        <button\n          className=\"main-navigation__menu-btn\"\n          onClick={openDrawerHandler}\n        >\n          <span />\n          <span />\n          <span />\n        </button>\n        <h1 className=\"main-navigation__title\">\n          <Link to=\"/\">YourPlaces</Link>\n        </h1>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </React.Fragment>\n  );\n};\n\nexport default MainNavigation;\n","import React, { useState, useCallback } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from 'react-router-dom';\n\nimport Users from './user/pages/Users';\nimport NewPlace from './places/pages/NewPlace';\nimport UserPlaces from './places/pages/UserPlaces';\nimport UpdatePlace from './places/pages/UpdatePlace';\nimport Auth from './user/pages/Auth';\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport { AuthContext } from './shared/context/auth-context';\n\nconst App = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userId, setUserId] = useState(false);\n\n  const login = useCallback(uid => {\n    setIsLoggedIn(true);\n    setUserId(uid);\n  }, []);\n\n  const logout = useCallback(() => {\n    setIsLoggedIn(false);\n    setUserId(null);\n  }, []);\n\n  let routes;\n\n  if (isLoggedIn) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:placeId\">\n          <UpdatePlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: isLoggedIn,\n        userId: userId,\n        login: login,\n        logout: logout\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>{routes}</main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}